
<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8" />
  <title>Minutos Escuchados</title>
  <style>
    body { background: #f847da; font-family: 'Segoe UI'; color: #e8309b; margin: 0; }
    .container { background: #C8A2C8; border-radius: 30px; border: 3px dotted aqua; margin: 30px; padding: 20px; box-shadow: 10px 10px 0 palevioletred; text-align: center; }
    .minutes-fixed { background: white; color: #e8309b; padding: 10px; font-size: 28px; border-radius: 10px; margin: 20px auto; font-weight: bold; }
    .track-list { text-align: left; margin: 20px; padding: 10px; max-height: 300px; overflow-y: auto; background: rgba(255,255,255,0.15); border-radius: 10px; }
    .track-item { padding: 6px; border-bottom: 1px solid rgba(255,255,255,0.1); }
    .track-count { color: #80d8ff; font-weight: bold; }
  </style>
</head>
<body>
<div class="container">
  <h1>Minutos Escuchados</h1>
  <div id="output">Cargando...</div>
</div>

<script>
const clientId = "c2d05e3f90e645a1828661c9d618f0d1";
const redirectUri = window.location.origin + window.location.pathname;

async function fetchAccessToken(code) {
  const codeVerifier = localStorage.getItem("code_verifier");
  const body = new URLSearchParams({
    grant_type: "authorization_code",
    code,
    redirect_uri: redirectUri,
    client_id: clientId,
    code_verifier: codeVerifier
  });
  const response = await fetch("https://accounts.spotify.com/api/token", {
    method: "POST",
    headers: { "Content-Type": "application/x-www-form-urlencoded" },
    body
  });
  return (await response.json()).access_token;
}

async function getRecentTracks(token) {
  const res = await fetch("https://api.spotify.com/v1/me/player/recently-played?limit=50", {
    headers: { Authorization: `Bearer ${token}` }
  });
  const data = await res.json();
  let trackMap = new Map();
  let totalMs = 0;
  data.items.forEach(item => {
    const name = item.track.name;
    totalMs += item.track.duration_ms;
    trackMap.set(name, (trackMap.get(name) || 0) + 1);
  });

  const totalMinutes = Math.round(totalMs / 60000);
  const stored = parseInt(localStorage.getItem("minutosRecientes") || "0");
  const updated = stored + totalMinutes;
  localStorage.setItem("minutosRecientes", updated);

  document.getElementById("output").innerHTML = `
    <div class="minutes-fixed">${updated} minutos</div>
    <div class="track-list">
      ${Array.from(trackMap.entries()).map(([name, count]) =>
        `<div class="track-item">${name} ${count > 1 ? `<span class="track-count">*${count}</span>` : ''}</div>`).join('')}
    </div>
  `;
}

const urlParams = new URLSearchParams(window.location.search);
const code = urlParams.get("code");
if (code) {
  fetchAccessToken(code).then(getRecentTracks).catch(err => {
    document.getElementById("output").innerHTML = `<p style="color:red;">Error: ${err.message}</p>`;
  });
}
</script>
</body>
</html>

